# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19eE8FX7XV49c4BRDU6d6i8dF31611qZl
"""
import pickle
from flask import Flask, render_template, request, jsonify
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
import pandas as pd
# from myProject1.preprocessing import data_processing_pipeline
# from myProject1.FeatureEngineering import feature_engineering_pipeline

flask_app = Flask(__name__)

log_model = pickle.load(open('LogisticRegression.pkl', 'rb'))
    

@flask_app.route("/")
def home():
    return render_template("base.html")



@flask_app.route("/predict", methods=['POST'])
def predict():
    try:
        data = request.get_json()
        # print(data)
        df = pd.DataFrame(data, index=[0])
        print(df)
        # df_initial = data_processing_pipeline.fit_transform(df)
        # print(df_initial)
        # df_final = feature_engineering_pipeline.fit_transform(df_initial)
        # print(df_final)
        df = df.drop(['EverDelinquent'], axis = 1)
        prediction = log_model.predict(df)
        print('PREDICTION', prediction)
        return jsonify({'prediction': prediction})

    except Exception as e:
        return jsonify({'error': str(e)})


if __name__ == '__main__':
    flask_app.run(debug=True)